How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I this it is a very useful tool in order to compare different versions of software and track any bugs which might have occurred.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You are able to track progress of a program. If a program fails you have a the capability to go back to a previous working saved version
    and determined where the error(bug) occurred.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing when to commit is a positive because you gain the flexibility to choose when to save, but run the risk of
    forgetting to save and running the risk of loosing progress.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Some commands can affect multiple files, or stem functions from other files. It is important to keep take of any changes between connected
    files in order for the functions and script to continue working properly.

How can you use the commands git log and git diff to view the history of files?

    You can use them to track changes made by your collaborators or yourself.

How might using version control make you more confident to make changes that
could break something?

    It enable the user to try new setting or functions to improve an application or script, knowing that is it possible to revert back to
    an original version.

Now that you have your workspace set up, what do you want to try using Git for?

    I am planning on using git to manage and save my projects, and in order to develop a project portfolio. 
